<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".g.cs" #>
<#
	var optionsPath = this.Host.ResolvePath("../Options");
	var files = Directory.EnumerateFiles(optionsPath)
		.Where(f => !Path.GetFileName(f).Contains("Base"));
#>
/* <autogenerated />
 * Do NOT Edit this file, it is automatically generated during
 * build time.
 */

namespace VideoConverter.DependencyInjection
{
	using DryIoc;
	using VideoConverter.Options;

	public static class OptionsRegistrator
	{
		public static void Register(IContainer container)
		{
<#
			foreach (var file in files)
			{
				var className = Path.GetFileNameWithoutExtension(file);
#>
				container.Register<<#= className #>>(Reuse.Singleton);
<#
			}
#>
		}
	}
}
